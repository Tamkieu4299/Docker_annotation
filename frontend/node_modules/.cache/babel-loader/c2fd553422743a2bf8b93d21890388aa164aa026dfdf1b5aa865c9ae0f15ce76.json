{"ast":null,"code":"var _jsxFileName = \"/Users/tamkieu/Desktop/deltacognition/frontend/src/components/boundingbox/Boundingbox.jsx\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Row } from 'react-bootstrap';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TagImg extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rects: [[110, 30, 70, 70], [40, 30, 70, 70]],\n      ctx: ''\n    };\n    this.tagPerson = this.tagPerson.bind(this);\n  }\n  tagPerson(e) {\n    var x = e.offsetX,\n      y = e.offsetY;\n    for (var i = 0; i < this.props.rects.length; i++) {\n      // check whether:\n      if (x > this.props.rects[i][0] // mouse x between x and x + width\n      && x < this.props.rects[i][0] + this.props.rects[i][2] && y > this.props.rects[i][1] // mouse y between y and y + height\n      && y < this.props.rects[i][1] + this.props.rects[i][3]) {\n        alert('Rectangle ' + i + ' clicked');\n      }\n    }\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    const ctx = this.refs.canvas.getContext('2d');\n    var myImage = new Image();\n    myImage.onload = function () {\n      var width = myImage.naturalWidth; // this will be 300\n      var height = myImage.naturalHeight; // this will be 400\n      ctx.drawImage(myImage, 0, 0, 300, 200);\n      ctx.beginPath();\n      ctx.strokeStyle = \"white\";\n      // for(var i=0;i<this.state.rects.length;i++) {\n      //   // ctx.rect(this.state.rects[i][0], // fill at (x, y) with (width, height)\n      //   //          this.state.rects[i][1],\n      //   //          this.state.rects[i][2],\n      //   //          this.state.rects[i][3]);\n      //   console.log(\"helloo\");\n      // }\n      console.log(this.state.rects);\n      ctx.stroke();\n    };\n    myImage.src = this.props.path;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"afterUpload\",\n        action: \"\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          id: \"image_preview\",\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: \"canvas\",\n            onClick: this.tagPerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TagImg;","map":{"version":3,"names":["React","Component","render","Row","TagImg","constructor","props","state","rects","ctx","tagPerson","bind","e","x","offsetX","y","offsetY","i","length","alert","componentDidMount","console","log","refs","canvas","getContext","myImage","Image","onload","width","naturalWidth","height","naturalHeight","drawImage","beginPath","strokeStyle","stroke","src","path"],"sources":["/Users/tamkieu/Desktop/deltacognition/frontend/src/components/boundingbox/Boundingbox.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport {Row} from 'react-bootstrap';    \nimport '../App.css';\n\nclass TagImg extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      rects:[[110, 30, 70, 70], [40, 30, 70, 70]],\n      ctx : ''\n    };\n    this.tagPerson = this.tagPerson.bind(this);\n  }\n\n  tagPerson(e){\n    var x = e.offsetX,\n        y = e.offsetY;\n\n    for(var i=0;i<this.props.rects.length;i++) { // check whether:\n        if(x > this.props.rects[i][0]            // mouse x between x and x + width\n        && x < this.props.rects[i][0] + this.props.rects[i][2]\n        && y > this.props.rects[i][1]            // mouse y between y and y + height\n        && y < this.props.rects[i][1] + this.props.rects[i][3]) {\n            alert('Rectangle ' + i + ' clicked');\n        }\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    const ctx = this.refs.canvas.getContext('2d');\n    var myImage = new Image();\n\n    myImage.onload = function() {\n      var width = myImage.naturalWidth; // this will be 300\n      var height = myImage.naturalHeight; // this will be 400\n      ctx.drawImage(myImage, 0, 0, 300, 200);\n\n      ctx.beginPath();\n      ctx.strokeStyle=\"white\";\n      // for(var i=0;i<this.state.rects.length;i++) {\n      //   // ctx.rect(this.state.rects[i][0], // fill at (x, y) with (width, height)\n      //   //          this.state.rects[i][1],\n      //   //          this.state.rects[i][2],\n      //   //          this.state.rects[i][3]);\n      //   console.log(\"helloo\");\n      // }\n      console.log(this.state.rects);\n\n      ctx.stroke();\n    }\n    myImage.src = this.props.path;\n  }\n  render() {\n    return (\n      <div>\n      <form id=\"afterUpload\" action=\"\" method=\"post\" encType=\"multipart/form-data\">\n        <Row id=\"image_preview\" className=\"row\">\n          <canvas ref=\"canvas\" onClick={this.tagPerson}/>\n        </Row>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default TagImg;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}