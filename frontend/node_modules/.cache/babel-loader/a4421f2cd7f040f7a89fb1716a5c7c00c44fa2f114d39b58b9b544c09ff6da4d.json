{"ast":null,"code":"var _jsxFileName = \"/Users/tamkieu/Desktop/deltacognition/frontend/src/components/canvasinit/Canvasinit.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Canvasinit(_ref) {\n  _s();\n  let {\n    post,\n    image_path\n  } = _ref;\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [drawing, setDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    // console.log(anno_arr)\n    const c = document.getElementById(image_path);\n    const ctx = c.getContext(\"2d\");\n    var imageObj1 = new Image();\n    imageObj1.src = PF + image_path;\n    imageObj1.onload = function () {\n      ctx.drawImage(imageObj1, 0, 0);\n      if (post.user_id === user.id && post.annotation_path !== \"\") {\n        const anno_arr = post.annotation_path.split(\"/\"); // \"/279,84/153,97\"\n        for (const xy of anno_arr) {\n          const xy_arr = xy.split(',');\n          ctx.strokeRect(parseInt(xy_arr[0]), parseInt(xy_arr[1]), 60, 80);\n        }\n      }\n    };\n  }, [image_path, PF]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 10;\n    ctxRef.current = ctx;\n  }, [image_path]);\n  const startDraw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (post.user_id !== user.id) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(offsetX, offsetY);\n    setDrawing(true);\n  };\n  const stopDraw = async _ref3 => {\n    let {\n      nativeEvent\n    } = _ref3;\n    if (post.user_id !== user.id) return;\n    ctxRef.current.closePath();\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    // ctxRef.current.lineTo(offsetX, offsetY);\n    ctxRef.current.strokeRect(offsetX, offsetY, 60, 80);\n    const newXY = {\n      x: offsetX.toString(),\n      y: offsetY.toString()\n    };\n    try {\n      await axios.put(`/posts/update/${post.id}`, newXY);\n    } catch (err) {}\n    console.log(offsetX, offsetY);\n    setDrawing(false);\n  };\n  const clear = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: image_path,\n      width: \"1000\",\n      height: \"300\",\n      style: {\n        border: \"1px solid #d3d3d3\"\n      },\n      onMouseDown: startDraw,\n      onMouseUp: stopDraw,\n      children: \"Your browser does not support the HTML canvas tag.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), post.user_id === user.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => clear(),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Canvasinit, \"hLTnsWBtj07Y4S7LZBp+A5NeNqI=\");\n_c = Canvasinit;\nvar _c;\n$RefreshReg$(_c, \"Canvasinit\");","map":{"version":3,"names":["useEffect","useState","useContext","useRef","AuthContext","axios","Canvasinit","post","image_path","PF","process","env","REACT_APP_PUBLIC_FOLDER","drawing","setDrawing","canvasRef","ctxRef","user","c","document","getElementById","ctx","getContext","imageObj1","Image","src","onload","drawImage","user_id","id","annotation_path","anno_arr","split","xy","xy_arr","strokeRect","parseInt","canvas","current","lineCap","strokeStyle","lineWidth","startDraw","nativeEvent","offsetX","offsetY","beginPath","moveTo","stopDraw","closePath","newXY","x","toString","y","put","err","console","log","clear","window","location","reload","border"],"sources":["/Users/tamkieu/Desktop/deltacognition/frontend/src/components/canvasinit/Canvasinit.jsx"],"sourcesContent":["import { useEffect, useState, useContext, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\n\nexport default function Canvasinit({post, image_path }) {\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n    const [drawing, setDrawing] = useState(false);\n    const canvasRef = useRef(null);\n    const ctxRef = useRef(null);\n    const { user } = useContext(AuthContext);\n    useEffect(() => {\n        // console.log(anno_arr)\n        const c = document.getElementById(image_path);\n        const ctx = c.getContext(\"2d\");\n        var imageObj1 = new Image();\n        imageObj1.src = PF + image_path;\n        imageObj1.onload = function () {\n            ctx.drawImage(imageObj1, 0, 0);\n            if(post.user_id===user.id && post.annotation_path!==\"\"){\n                const anno_arr = post.annotation_path.split(\"/\") // \"/279,84/153,97\"\n                for(const xy of anno_arr){\n                    const xy_arr = xy.split(',')\n                    ctx.strokeRect(parseInt(xy_arr[0]), parseInt(xy_arr[1]), 60, 80);\n                }\n            }\n        };\n    }, [image_path, PF]);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 10;\n        ctxRef.current = ctx;\n      }, [image_path]);\n\n    const startDraw = ({ nativeEvent }) => {\n        if(post.user_id!==user.id) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.beginPath();\n        ctxRef.current.moveTo(offsetX, offsetY);\n        setDrawing(true);\n      };\n    const stopDraw = async ({ nativeEvent }) => {\n        if(post.user_id!==user.id) return;\n        ctxRef.current.closePath();\n        if (!drawing) return;\n        const { offsetX, offsetY } = nativeEvent;\n        // ctxRef.current.lineTo(offsetX, offsetY);\n        ctxRef.current.strokeRect(offsetX, offsetY, 60, 80);\n        const newXY = {\n            x: offsetX.toString(),\n            y: offsetY.toString()\n        }\n        try {\n            await axios.put(`/posts/update/${post.id}`, newXY);\n        } catch (err) {}\n        console.log(offsetX, offsetY)\n        setDrawing(false);\n      };\n      const clear = () => {\n        window.location.reload();\n      };\n    return (\n        <div>\n            <canvas\n                ref={canvasRef}\n                id={image_path}\n                width=\"1000\"\n                height=\"300\"\n                style={{ border: \"1px solid #d3d3d3\" }}\n                onMouseDown={startDraw}\n                onMouseUp={stopDraw}\n            >\n                Your browser does not support the HTML canvas tag.\n            </canvas>\n            <br />\n            {post.user_id===user.id && <button onClick={() => clear()}>Save</button>}\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}